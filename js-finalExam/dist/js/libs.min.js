!function(t,e){function i(t,e){var i=t.createElement("p"),n=t.getElementsByTagName("head")[0]||t.documentElement;return i.innerHTML="x<style>"+e+"</style>",n.insertBefore(i.lastChild,n.firstChild)}function n(){var t=x.elements;return"string"==typeof t?t.split(" "):t}function r(t,e){var i=x.elements;"string"!=typeof i&&(i=i.join(" ")),"string"!=typeof t&&(t=t.join(" ")),x.elements=i+" "+t,c(e)}function s(t){var e=v[t[m]];return e||(e={},y++,t[m]=y,v[y]=e),e}function o(t,i,n){if(i||(i=e),d)return i.createElement(t);n||(n=s(i));var r;return r=n.cache[t]?n.cache[t].cloneNode():g.test(t)?(n.cache[t]=n.createElem(t)).cloneNode():n.createElem(t),!r.canHaveChildren||p.test(t)||r.tagUrn?r:n.frag.appendChild(r)}function a(t,i){if(t||(t=e),d)return t.createDocumentFragment();i=i||s(t);for(var r=i.frag.cloneNode(),o=0,a=n(),h=a.length;h>o;o++)r.createElement(a[o]);return r}function h(t,e){e.cache||(e.cache={},e.createElem=t.createElement,e.createFrag=t.createDocumentFragment,e.frag=e.createFrag()),t.createElement=function(i){return x.shivMethods?o(i,t,e):e.createElem(i)},t.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+n().join().replace(/[\w\-:]+/g,function(t){return e.createElem(t),e.frag.createElement(t),'c("'+t+'")'})+");return n}")(x,e.frag)}function c(t){t||(t=e);var n=s(t);return!x.shivCSS||u||n.hasCSS||(n.hasCSS=!!i(t,"article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")),d||h(t,n),t}var u,d,f="3.7.3",l=t.html5||{},p=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,g=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,m="_html5shiv",y=0,v={};!function(){try{var t=e.createElement("a");t.innerHTML="<xyz></xyz>",u="hidden"in t,d=1==t.childNodes.length||function(){e.createElement("a");var t=e.createDocumentFragment();return"undefined"==typeof t.cloneNode||"undefined"==typeof t.createDocumentFragment||"undefined"==typeof t.createElement}()}catch(t){u=!0,d=!0}}();var x={elements:l.elements||"abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video",version:f,shivCSS:l.shivCSS!==!1,supportsUnknownElements:d,shivMethods:l.shivMethods!==!1,type:"default",shivDocument:c,createElement:o,createDocumentFragment:a,addElements:r};t.html5=x,c(e),"object"==typeof module&&module.exports&&(module.exports=x)}("undefined"!=typeof window?window:this,document),function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}("undefined"!=typeof window?window:this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},n=i[t]=i[t]||[];return n.indexOf(e)==-1&&n.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{},n=i[t]=i[t]||{};return n[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=i.indexOf(e);return n!=-1&&i.splice(n,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=0,r=i[n];e=e||[];for(var s=this._onceEvents&&this._onceEvents[t];r;){var o=s&&s[r];o&&(this.off(t,r),delete s[r]),r.apply(this,e),n+=o?0:1,r=i[n]}return this}},t}),function(t,e){"use strict";"function"==typeof define&&define.amd?define(["ev-emitter/ev-emitter"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("ev-emitter")):t.imagesLoaded=e(t,t.EvEmitter)}(window,function(t,e){function i(t,e){for(var i in e)t[i]=e[i];return t}function n(t){var e=[];if(Array.isArray(t))e=t;else if("number"==typeof t.length)for(var i=0;i<t.length;i++)e.push(t[i]);else e.push(t);return e}function r(t,e,s){return this instanceof r?("string"==typeof t&&(t=document.querySelectorAll(t)),this.elements=n(t),this.options=i({},this.options),"function"==typeof e?s=e:i(this.options,e),s&&this.on("always",s),this.getImages(),a&&(this.jqDeferred=new a.Deferred),void setTimeout(function(){this.check()}.bind(this))):new r(t,e,s)}function s(t){this.img=t}function o(t,e){this.url=t,this.element=e,this.img=new Image}var a=t.jQuery,h=t.console;r.prototype=Object.create(e.prototype),r.prototype.options={},r.prototype.getImages=function(){this.images=[],this.elements.forEach(this.addElementImages,this)},r.prototype.addElementImages=function(t){"IMG"==t.nodeName&&this.addImage(t),this.options.background===!0&&this.addElementBackgroundImages(t);var e=t.nodeType;if(e&&c[e]){for(var i=t.querySelectorAll("img"),n=0;n<i.length;n++){var r=i[n];this.addImage(r)}if("string"==typeof this.options.background){var s=t.querySelectorAll(this.options.background);for(n=0;n<s.length;n++){var o=s[n];this.addElementBackgroundImages(o)}}}};var c={1:!0,9:!0,11:!0};return r.prototype.addElementBackgroundImages=function(t){var e=getComputedStyle(t);if(e)for(var i=/url\((['"])?(.*?)\1\)/gi,n=i.exec(e.backgroundImage);null!==n;){var r=n&&n[2];r&&this.addBackground(r,t),n=i.exec(e.backgroundImage)}},r.prototype.addImage=function(t){var e=new s(t);this.images.push(e)},r.prototype.addBackground=function(t,e){var i=new o(t,e);this.images.push(i)},r.prototype.check=function(){function t(t,i,n){setTimeout(function(){e.progress(t,i,n)})}var e=this;return this.progressedCount=0,this.hasAnyBroken=!1,this.images.length?void this.images.forEach(function(e){e.once("progress",t),e.check()}):void this.complete()},r.prototype.progress=function(t,e,i){this.progressedCount++,this.hasAnyBroken=this.hasAnyBroken||!t.isLoaded,this.emitEvent("progress",[this,t,e]),this.jqDeferred&&this.jqDeferred.notify&&this.jqDeferred.notify(this,t),this.progressedCount==this.images.length&&this.complete(),this.options.debug&&h&&h.log("progress: "+i,t,e)},r.prototype.complete=function(){var t=this.hasAnyBroken?"fail":"done";if(this.isComplete=!0,this.emitEvent(t,[this]),this.emitEvent("always",[this]),this.jqDeferred){var e=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[e](this)}},s.prototype=Object.create(e.prototype),s.prototype.check=function(){var t=this.getIsImageComplete();return t?void this.confirm(0!==this.img.naturalWidth,"naturalWidth"):(this.proxyImage=new Image,this.proxyImage.addEventListener("load",this),this.proxyImage.addEventListener("error",this),this.img.addEventListener("load",this),this.img.addEventListener("error",this),void(this.proxyImage.src=this.img.src))},s.prototype.getIsImageComplete=function(){return this.img.complete&&void 0!==this.img.naturalWidth},s.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.img,e])},s.prototype.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},s.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindEvents()},s.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindEvents()},s.prototype.unbindEvents=function(){this.proxyImage.removeEventListener("load",this),this.proxyImage.removeEventListener("error",this),this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},o.prototype=Object.create(s.prototype),o.prototype.check=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.img.src=this.url;var t=this.getIsImageComplete();t&&(this.confirm(0!==this.img.naturalWidth,"naturalWidth"),this.unbindEvents())},o.prototype.unbindEvents=function(){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},o.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.element,e])},r.makeJQueryPlugin=function(e){e=e||t.jQuery,e&&(a=e,a.fn.imagesLoaded=function(t,e){var i=new r(this,t,e);return i.jqDeferred.promise(a(this))})},r.makeJQueryPlugin(),r}),jQuery.easing.jswing=jQuery.easing.swing,jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(t,e,i,n,r){return jQuery.easing[jQuery.easing.def](t,e,i,n,r)},easeInQuad:function(t,e,i,n,r){return n*(e/=r)*e+i},easeOutQuad:function(t,e,i,n,r){return-n*(e/=r)*(e-2)+i},easeInOutQuad:function(t,e,i,n,r){return(e/=r/2)<1?n/2*e*e+i:-n/2*(--e*(e-2)-1)+i},easeInCubic:function(t,e,i,n,r){return n*(e/=r)*e*e+i},easeOutCubic:function(t,e,i,n,r){return n*((e=e/r-1)*e*e+1)+i},easeInOutCubic:function(t,e,i,n,r){return(e/=r/2)<1?n/2*e*e*e+i:n/2*((e-=2)*e*e+2)+i},easeInQuart:function(t,e,i,n,r){return n*(e/=r)*e*e*e+i},easeOutQuart:function(t,e,i,n,r){return-n*((e=e/r-1)*e*e*e-1)+i},easeInOutQuart:function(t,e,i,n,r){return(e/=r/2)<1?n/2*e*e*e*e+i:-n/2*((e-=2)*e*e*e-2)+i},easeInQuint:function(t,e,i,n,r){return n*(e/=r)*e*e*e*e+i},easeOutQuint:function(t,e,i,n,r){return n*((e=e/r-1)*e*e*e*e+1)+i},easeInOutQuint:function(t,e,i,n,r){return(e/=r/2)<1?n/2*e*e*e*e*e+i:n/2*((e-=2)*e*e*e*e+2)+i},easeInSine:function(t,e,i,n,r){return-n*Math.cos(e/r*(Math.PI/2))+n+i},easeOutSine:function(t,e,i,n,r){return n*Math.sin(e/r*(Math.PI/2))+i},easeInOutSine:function(t,e,i,n,r){return-n/2*(Math.cos(Math.PI*e/r)-1)+i},easeInExpo:function(t,e,i,n,r){return 0==e?i:n*Math.pow(2,10*(e/r-1))+i},easeOutExpo:function(t,e,i,n,r){return e==r?i+n:n*(-Math.pow(2,-10*e/r)+1)+i},easeInOutExpo:function(t,e,i,n,r){return 0==e?i:e==r?i+n:(e/=r/2)<1?n/2*Math.pow(2,10*(e-1))+i:n/2*(-Math.pow(2,-10*--e)+2)+i},easeInCirc:function(t,e,i,n,r){return-n*(Math.sqrt(1-(e/=r)*e)-1)+i},easeOutCirc:function(t,e,i,n,r){return n*Math.sqrt(1-(e=e/r-1)*e)+i},easeInOutCirc:function(t,e,i,n,r){return(e/=r/2)<1?-n/2*(Math.sqrt(1-e*e)-1)+i:n/2*(Math.sqrt(1-(e-=2)*e)+1)+i},easeInElastic:function(t,e,i,n,r){var s=1.70158,o=0,a=n;if(0==e)return i;if(1==(e/=r))return i+n;if(o||(o=.3*r),a<Math.abs(n)){a=n;var s=o/4}else var s=o/(2*Math.PI)*Math.asin(n/a);return-(a*Math.pow(2,10*(e-=1))*Math.sin((e*r-s)*(2*Math.PI)/o))+i},easeOutElastic:function(t,e,i,n,r){var s=1.70158,o=0,a=n;if(0==e)return i;if(1==(e/=r))return i+n;if(o||(o=.3*r),a<Math.abs(n)){a=n;var s=o/4}else var s=o/(2*Math.PI)*Math.asin(n/a);return a*Math.pow(2,-10*e)*Math.sin((e*r-s)*(2*Math.PI)/o)+n+i},easeInOutElastic:function(t,e,i,n,r){var s=1.70158,o=0,a=n;if(0==e)return i;if(2==(e/=r/2))return i+n;if(o||(o=r*(.3*1.5)),a<Math.abs(n)){a=n;var s=o/4}else var s=o/(2*Math.PI)*Math.asin(n/a);return e<1?-.5*(a*Math.pow(2,10*(e-=1))*Math.sin((e*r-s)*(2*Math.PI)/o))+i:a*Math.pow(2,-10*(e-=1))*Math.sin((e*r-s)*(2*Math.PI)/o)*.5+n+i},easeInBack:function(t,e,i,n,r,s){return void 0==s&&(s=1.70158),n*(e/=r)*e*((s+1)*e-s)+i},easeOutBack:function(t,e,i,n,r,s){return void 0==s&&(s=1.70158),n*((e=e/r-1)*e*((s+1)*e+s)+1)+i},easeInOutBack:function(t,e,i,n,r,s){return void 0==s&&(s=1.70158),(e/=r/2)<1?n/2*(e*e*(((s*=1.525)+1)*e-s))+i:n/2*((e-=2)*e*(((s*=1.525)+1)*e+s)+2)+i},easeInBounce:function(t,e,i,n,r){return n-jQuery.easing.easeOutBounce(t,r-e,0,n,r)+i},easeOutBounce:function(t,e,i,n,r){return(e/=r)<1/2.75?n*(7.5625*e*e)+i:e<2/2.75?n*(7.5625*(e-=1.5/2.75)*e+.75)+i:e<2.5/2.75?n*(7.5625*(e-=2.25/2.75)*e+.9375)+i:n*(7.5625*(e-=2.625/2.75)*e+.984375)+i},easeInOutBounce:function(t,e,i,n,r){return e<r/2?.5*jQuery.easing.easeInBounce(t,2*e,0,n,r)+i:.5*jQuery.easing.easeOutBounce(t,2*e-r,0,n,r)+.5*n+i}}),function(t,e){"function"==typeof define&&define.amd?define("packery/js/rect",e):"object"==typeof module&&module.exports?module.exports=e():(t.Packery=t.Packery||{},t.Packery.Rect=e())}(window,function(){function t(e){for(var i in t.defaults)this[i]=t.defaults[i];for(i in e)this[i]=e[i]}t.defaults={x:0,y:0,width:0,height:0};var e=t.prototype;return e.contains=function(t){var e=t.width||0,i=t.height||0;return this.x<=t.x&&this.y<=t.y&&this.x+this.width>=t.x+e&&this.y+this.height>=t.y+i},e.overlaps=function(t){var e=this.x+this.width,i=this.y+this.height,n=t.x+t.width,r=t.y+t.height;return this.x<n&&e>t.x&&this.y<r&&i>t.y},e.getMaximalFreeRects=function(e){if(!this.overlaps(e))return!1;var i,n=[],r=this.x+this.width,s=this.y+this.height,o=e.x+e.width,a=e.y+e.height;return this.y<e.y&&(i=new t({x:this.x,y:this.y,width:this.width,height:e.y-this.y}),n.push(i)),r>o&&(i=new t({x:o,y:this.y,width:r-o,height:this.height}),n.push(i)),s>a&&(i=new t({x:this.x,y:a,width:this.width,height:s-a}),n.push(i)),this.x<e.x&&(i=new t({x:this.x,y:this.y,width:e.x-this.x,height:this.height}),n.push(i)),n},e.canFit=function(t){return this.width>=t.width&&this.height>=t.height},t}),function(t,e){if("function"==typeof define&&define.amd)define("packery/js/packer",["./rect"],e);else if("object"==typeof module&&module.exports)module.exports=e(require("./rect"));else{var i=t.Packery=t.Packery||{};i.Packer=e(i.Rect)}}(window,function(t){function e(t,e,i){this.width=t||0,this.height=e||0,this.sortDirection=i||"downwardLeftToRight",this.reset()}var i=e.prototype;i.reset=function(){this.spaces=[];var e=new t({x:0,y:0,width:this.width,height:this.height});this.spaces.push(e),this.sorter=n[this.sortDirection]||n.downwardLeftToRight},i.pack=function(t){for(var e=0;e<this.spaces.length;e++){var i=this.spaces[e];if(i.canFit(t)){this.placeInSpace(t,i);break}}},i.columnPack=function(t){for(var e=0;e<this.spaces.length;e++){var i=this.spaces[e],n=i.x<=t.x&&i.x+i.width>=t.x+t.width&&i.height>=t.height-.01;if(n){t.y=i.y,this.placed(t);break}}},i.rowPack=function(t){for(var e=0;e<this.spaces.length;e++){var i=this.spaces[e],n=i.y<=t.y&&i.y+i.height>=t.y+t.height&&i.width>=t.width-.01;if(n){t.x=i.x,this.placed(t);break}}},i.placeInSpace=function(t,e){t.x=e.x,t.y=e.y,this.placed(t)},i.placed=function(t){for(var e=[],i=0;i<this.spaces.length;i++){var n=this.spaces[i],r=n.getMaximalFreeRects(t);r?e.push.apply(e,r):e.push(n)}this.spaces=e,this.mergeSortSpaces()},i.mergeSortSpaces=function(){e.mergeRects(this.spaces),this.spaces.sort(this.sorter)},i.addSpace=function(t){this.spaces.push(t),this.mergeSortSpaces()},e.mergeRects=function(t){var e=0,i=t[e];t:for(;i;){for(var n=0,r=t[e+n];r;){if(r==i)n++;else{if(r.contains(i)){t.splice(e,1),i=t[e];continue t}i.contains(r)?t.splice(e+n,1):n++}r=t[e+n]}e++,i=t[e]}return t};var n={downwardLeftToRight:function(t,e){return t.y-e.y||t.x-e.x},rightwardTopToBottom:function(t,e){return t.x-e.x||t.y-e.y}};return e}),function(t,e){"function"==typeof define&&define.amd?define("packery/js/item",["outlayer/outlayer","./rect"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer"),require("./rect")):t.Packery.Item=e(t.Outlayer,t.Packery.Rect)}(window,function(t,e){var i=document.documentElement.style,n="string"==typeof i.transform?"transform":"WebkitTransform",r=function(){t.Item.apply(this,arguments)},s=r.prototype=Object.create(t.Item.prototype),o=s._create;s._create=function(){o.call(this),this.rect=new e};var a=s.moveTo;return s.moveTo=function(t,e){var i=Math.abs(this.position.x-t),n=Math.abs(this.position.y-e),r=this.layout.dragItemCount&&!this.isPlacing&&!this.isTransitioning&&i<1&&n<1;return r?void this.goTo(t,e):void a.apply(this,arguments)},s.enablePlacing=function(){this.removeTransitionStyles(),this.isTransitioning&&n&&(this.element.style[n]="none"),this.isTransitioning=!1,this.getSize(),this.layout._setRectSize(this.element,this.rect),this.isPlacing=!0},s.disablePlacing=function(){this.isPlacing=!1},s.removeElem=function(){this.element.parentNode.removeChild(this.element),this.layout.packer.addSpace(this.rect),this.emitEvent("remove",[this])},s.showDropPlaceholder=function(){var t=this.dropPlaceholder;t||(t=this.dropPlaceholder=document.createElement("div"),t.className="packery-drop-placeholder",t.style.position="absolute"),t.style.width=this.size.width+"px",t.style.height=this.size.height+"px",this.positionDropPlaceholder(),this.layout.element.appendChild(t)},s.positionDropPlaceholder=function(){this.dropPlaceholder.style[n]="translate("+this.rect.x+"px, "+this.rect.y+"px)"},s.hideDropPlaceholder=function(){this.layout.element.removeChild(this.dropPlaceholder)},r}),function(t,e){"function"==typeof define&&define.amd?define("packery/js/packery",["get-size/get-size","outlayer/outlayer","./rect","./packer","./item"],e):"object"==typeof module&&module.exports?module.exports=e(require("get-size"),require("outlayer"),require("./rect"),require("./packer"),require("./item")):t.Packery=e(t.getSize,t.Outlayer,t.Packery.Rect,t.Packery.Packer,t.Packery.Item)}(window,function(t,e,i,n,r){function s(t,e){return t.position.y-e.position.y||t.position.x-e.position.x}function o(t,e){return t.position.x-e.position.x||t.position.y-e.position.y}function a(t,e){var i=e.x-t.x,n=e.y-t.y;return Math.sqrt(i*i+n*n)}i.prototype.canFit=function(t){return this.width>=t.width-1&&this.height>=t.height-1};var h=e.create("packery");h.Item=r;var c=h.prototype;c._create=function(){e.prototype._create.call(this),this.packer=new n,this.shiftPacker=new n,this.isEnabled=!0,this.dragItemCount=0;var t=this;this.handleDraggabilly={dragStart:function(){t.itemDragStart(this.element)},dragMove:function(){t.itemDragMove(this.element,this.position.x,this.position.y)},dragEnd:function(){t.itemDragEnd(this.element)}},this.handleUIDraggable={start:function(e,i){i&&t.itemDragStart(e.currentTarget)},drag:function(e,i){i&&t.itemDragMove(e.currentTarget,i.position.left,i.position.top)},stop:function(e,i){i&&t.itemDragEnd(e.currentTarget)}}},c._resetLayout=function(){this.getSize(),this._getMeasurements();var t,e,i;this._getOption("horizontal")?(t=1/0,e=this.size.innerHeight+this.gutter,i="rightwardTopToBottom"):(t=this.size.innerWidth+this.gutter,e=1/0,i="downwardLeftToRight"),this.packer.width=this.shiftPacker.width=t,this.packer.height=this.shiftPacker.height=e,this.packer.sortDirection=this.shiftPacker.sortDirection=i,this.packer.reset(),this.maxY=0,this.maxX=0},c._getMeasurements=function(){this._getMeasurement("columnWidth","width"),this._getMeasurement("rowHeight","height"),this._getMeasurement("gutter","width")},c._getItemLayoutPosition=function(t){if(this._setRectSize(t.element,t.rect),this.isShifting||this.dragItemCount>0){var e=this._getPackMethod();this.packer[e](t.rect)}else this.packer.pack(t.rect);return this._setMaxXY(t.rect),t.rect},c.shiftLayout=function(){this.isShifting=!0,this.layout(),delete this.isShifting},c._getPackMethod=function(){return this._getOption("horizontal")?"rowPack":"columnPack"},c._setMaxXY=function(t){this.maxX=Math.max(t.x+t.width,this.maxX),this.maxY=Math.max(t.y+t.height,this.maxY)},c._setRectSize=function(e,i){var n=t(e),r=n.outerWidth,s=n.outerHeight;(r||s)&&(r=this._applyGridGutter(r,this.columnWidth),s=this._applyGridGutter(s,this.rowHeight)),i.width=Math.min(r,this.packer.width),i.height=Math.min(s,this.packer.height)},c._applyGridGutter=function(t,e){if(!e)return t+this.gutter;e+=this.gutter;var i=t%e,n=i&&i<1?"round":"ceil";return t=Math[n](t/e)*e},c._getContainerSize=function(){return this._getOption("horizontal")?{width:this.maxX-this.gutter}:{height:this.maxY-this.gutter}},c._manageStamp=function(t){var e,n=this.getItem(t);if(n&&n.isPlacing)e=n.rect;else{var r=this._getElementOffset(t);e=new i({x:this._getOption("originLeft")?r.left:r.right,y:this._getOption("originTop")?r.top:r.bottom})}this._setRectSize(t,e),this.packer.placed(e),this._setMaxXY(e)},c.sortItemsByPosition=function(){var t=this._getOption("horizontal")?o:s;this.items.sort(t)},c.fit=function(t,e,i){var n=this.getItem(t);n&&(this.stamp(n.element),n.enablePlacing(),this.updateShiftTargets(n),e=void 0===e?n.rect.x:e,i=void 0===i?n.rect.y:i,this.shift(n,e,i),this._bindFitEvents(n),n.moveTo(n.rect.x,n.rect.y),this.shiftLayout(),this.unstamp(n.element),this.sortItemsByPosition(),n.disablePlacing())},c._bindFitEvents=function(t){function e(){n++,2==n&&i.dispatchEvent("fitComplete",null,[t])}var i=this,n=0;t.once("layout",e),this.once("layoutComplete",e)},c.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&(this.options.shiftPercentResize?this.resizeShiftPercentLayout():this.layout())},c.needsResizeLayout=function(){var e=t(this.element),i=this._getOption("horizontal")?"innerHeight":"innerWidth";return e[i]!=this.size[i]},c.resizeShiftPercentLayout=function(){var e=this._getItemsForLayout(this.items),i=this._getOption("horizontal"),n=i?"y":"x",r=i?"height":"width",s=i?"rowHeight":"columnWidth",o=i?"innerHeight":"innerWidth",a=this[s];if(a=a&&a+this.gutter){this._getMeasurements();var h=this[s]+this.gutter;e.forEach(function(t){var e=Math.round(t.rect[n]/a);t.rect[n]=e*h})}else{var c=t(this.element)[o]+this.gutter,u=this.packer[r];e.forEach(function(t){t.rect[n]=t.rect[n]/u*c})}this.shiftLayout()},c.itemDragStart=function(t){if(this.isEnabled){this.stamp(t);var e=this.getItem(t);e&&(e.enablePlacing(),e.showDropPlaceholder(),this.dragItemCount++,this.updateShiftTargets(e))}},c.updateShiftTargets=function(t){this.shiftPacker.reset(),this._getBoundingRect();var e=this._getOption("originLeft"),n=this._getOption("originTop");this.stamps.forEach(function(t){var r=this.getItem(t);if(!r||!r.isPlacing){var s=this._getElementOffset(t),o=new i({x:e?s.left:s.right,y:n?s.top:s.bottom});this._setRectSize(t,o),this.shiftPacker.placed(o)}},this);var r=this._getOption("horizontal"),s=r?"rowHeight":"columnWidth",o=r?"height":"width";this.shiftTargetKeys=[],this.shiftTargets=[];var a,h=this[s];if(h=h&&h+this.gutter){var c=Math.ceil(t.rect[o]/h),u=Math.floor((this.shiftPacker[o]+this.gutter)/h);a=(u-c)*h;for(var d=0;d<u;d++)this._addShiftTarget(d*h,0,a)}else a=this.shiftPacker[o]+this.gutter-t.rect[o],this._addShiftTarget(0,0,a);var f=this._getItemsForLayout(this.items),l=this._getPackMethod();f.forEach(function(t){var e=t.rect;this._setRectSize(t.element,e),this.shiftPacker[l](e),this._addShiftTarget(e.x,e.y,a);var i=r?e.x+e.width:e.x,n=r?e.y:e.y+e.height;if(this._addShiftTarget(i,n,a),h)for(var s=Math.round(e[o]/h),c=1;c<s;c++){var u=r?i:e.x+h*c,d=r?e.y+h*c:n;this._addShiftTarget(u,d,a)}},this)},c._addShiftTarget=function(t,e,i){var n=this._getOption("horizontal")?e:t;if(!(0!==n&&n>i)){var r=t+","+e,s=this.shiftTargetKeys.indexOf(r)!=-1;s||(this.shiftTargetKeys.push(r),this.shiftTargets.push({x:t,y:e}))}},c.shift=function(t,e,i){var n,r=1/0,s={x:e,y:i};this.shiftTargets.forEach(function(t){var e=a(t,s);e<r&&(n=t,r=e)}),t.rect.x=n.x,t.rect.y=n.y};var u=120;c.itemDragMove=function(t,e,i){function n(){s.shift(r,e,i),r.positionDropPlaceholder(),s.layout()}var r=this.isEnabled&&this.getItem(t);if(r){e-=this.size.paddingLeft,i-=this.size.paddingTop;var s=this,o=new Date;this._itemDragTime&&o-this._itemDragTime<u?(clearTimeout(this.dragTimeout),this.dragTimeout=setTimeout(n,u)):(n(),this._itemDragTime=o)}},c.itemDragEnd=function(t){function e(){n++,2==n&&(i.element.classList.remove("is-positioning-post-drag"),i.hideDropPlaceholder(),r.dispatchEvent("dragItemPositioned",null,[i]))}var i=this.isEnabled&&this.getItem(t);if(i){clearTimeout(this.dragTimeout),i.element.classList.add("is-positioning-post-drag");var n=0,r=this;i.once("layout",e),this.once("layoutComplete",e),i.moveTo(i.rect.x,i.rect.y),this.layout(),this.dragItemCount=Math.max(0,this.dragItemCount-1),this.sortItemsByPosition(),i.disablePlacing(),this.unstamp(i.element)}},c.bindDraggabillyEvents=function(t){this._bindDraggabillyEvents(t,"on")},c.unbindDraggabillyEvents=function(t){this._bindDraggabillyEvents(t,"off")},c._bindDraggabillyEvents=function(t,e){var i=this.handleDraggabilly;t[e]("dragStart",i.dragStart),t[e]("dragMove",i.dragMove),t[e]("dragEnd",i.dragEnd)},c.bindUIDraggableEvents=function(t){this._bindUIDraggableEvents(t,"on")},c.unbindUIDraggableEvents=function(t){this._bindUIDraggableEvents(t,"off")},c._bindUIDraggableEvents=function(t,e){var i=this.handleUIDraggable;t[e]("dragstart",i.start)[e]("drag",i.drag)[e]("dragstop",i.stop)};var d=c.destroy;return c.destroy=function(){d.apply(this,arguments),this.isEnabled=!1},h.Rect=i,h.Packer=n,h}),function(t,e){"function"==typeof define&&define.amd?define(["isotope/js/layout-mode","packery/js/packery"],e):"object"==typeof module&&module.exports?module.exports=e(require("isotope-layout/js/layout-mode"),require("packery")):e(t.Isotope.LayoutMode,t.Packery)}(window,function(t,e){var i=t.create("packery"),n=i.prototype,r={_getElementOffset:!0,_getMeasurement:!0};for(var s in e.prototype)r[s]||(n[s]=e.prototype[s]);var o=n._resetLayout;n._resetLayout=function(){this.packer=this.packer||new e.Packer,this.shiftPacker=this.shiftPacker||new e.Packer,o.apply(this,arguments)};var a=n._getItemLayoutPosition;n._getItemLayoutPosition=function(t){return t.rect=t.rect||new e.Rect,a.call(this,t)};var h=n.needsResizeLayout;n.needsResizeLayout=function(){return this._getOption("horizontal")?this.needsVerticalResizeLayout():h.call(this)};var c=n._getOption;return n._getOption=function(t){return"horizontal"==t?void 0!==this.options.isHorizontal?this.options.isHorizontal:this.options.horizontal:c.apply(this.isotope,arguments)},i}),function(t){t.fn.slider=function(e){var i=t(".slider__arrow-left"),n=t(".slider__arrow-right"),r=460,s=0,o=0;return i.click(function(){var e=t(this).parent().parent().siblings(".slider__list");e.find("li").length;s!=o?(s+=460,e.animate({left:s+"px"},600,"easeInBack")):(s=-920,e.animate({left:s+"px"},600,"easeInBack"))}),n.click(function(){var e=t(this).parent().parent().siblings(".slider__list"),i=e.find("li").length,n=-((i-1)*r);s!=n?(s-=460,e.animate({left:s+"px"},600,"easeInBack")):(s=0,e.animate({left:s+"px"},600,"easeInBack"))}),this}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
