#container,#container img{height:200px;overflow:hidden}#carouselLeft,#carouselRight{top:225px;position:absolute;cursor:pointer}#carouselLeft,#carouselRight,#container img,.checkboxCss label,.niceCheck{cursor:pointer}#container,#container img,.niceCheck,pre{overflow:hidden}.NFS,body{font-family:Arial,sans-serif}.NFS,.boxfon,.select{color:#fff}header{background:url(../../img/header.jpg);height:395px}#container{position:absolute;top:150px;left:350px;width:620px}#container img{position:absolute;top:0;width:200px}#carouselLeft{left:290px}#carouselRight{left:980px}.NFS{background:#294555;width:100%;height:420px}.NFS>ul{margin:50px auto}.jlider{padding-left:0}form{margin:20px;background:#9CF;padding:10px}.niceCheck{width:17px;height:17px;display:inline-block;background:url(../../img/checkbox.png)}.niceCheckDisabled,.niceChecked{background-position:0 -17px}.niceCheck input{margin-left:-100px}div{margin-bottom:10px}.niceCheckDisabled{background-image:url(../../img/checkbox-disabled.png)}.checkboxCss{background-color:gray;height:auto;width:100%;padding:10px 30px}.checkboxCss input[type=checkbox]{position:absolute;clip:rect(0,0,0,0)}.checkboxCss label:after{content:" ";display:inline-block;width:17px;height:17px;background:url(../../img/checkbox-2.png);position:relative;top:3px;margin-left:15px}.checkboxCss input[type=checkbox]:checked+label:after{background-position:0 -17px}.checkboxCss label:hover:after{background-position:0 -34px}.checkboxCss input[type=checkbox]:checked+label:hover:after{background-position:0 -51px}.select{width:300px;height:180px;background:rgba(0,0,0,.5);font-size:16px}p{margin:0 auto;text-align:center;padding-top:30px}.jquery-selectbox{margin-left:48px}#default-usage-select{margin:0 auto;text-align:center}.fon{position:relative;background:gray;height:500px}.boxfon,.boxfonUI,.css{position:absolute;width:100px;height:50px;text-align:center}.boxfon{top:200px;left:300px;background:#000}.boxfonUI,.red{background:red;left:300px}.boxfonUI{top:300px}.blue{background:#00f;left:900px}.css{top:400px;left:300px;background:#ff0;color:red;transition:background-color 3s,left 3s}h2,pre{max-width:600px;width:100%}body,nav a{color:#fff}*{margin:0;padding:0;text-decoration:none}h2{margin:0 auto}pre{max-height:300px;margin:20px auto;overflow-x:auto;overflow-y:auto;background-color:rgba(0,0,0,.5);padding:10px 0}#checkout{background:#fff;padding:10px;color:#333;font-size:18px;width:260px;display:block;text-align:center;margin:100px auto}.jlider_frame{position:relative;margin:20px auto;box-shadow:0 0 10px rgba(0,0,0,.3)}body{background:url(../../css/header.jpg) center top no-repeat #000;margin:0;padding:0}.wrapper,nav>ul{margin:0 auto}nav{background:red}nav a{text-decoration:none;font-size:16px;line-height:40px}nav li{list-style-type:none;position:relative;vertical-align:text-top}nav a:hover{color:#000}nav>ul{height:60px;width:1000px}nav .menu{display:inline-block;margin-top:10px}nav .menuLink{margin:12px;padding:12px}nav .menu .subList{display:none;background:#e1e14b;position:absolute;top:40px;left:-10px;width:170px;padding-left:0;z-index:2}.dropdown,nav .menu .subList .submenu:nth-child(2){background-repeat:no-repeat;background-size:16px 16px}.dropdown{background-image:url(../../img/down.png);background-position:65px 12px}nav .menu .subList .submenu{margin:auto 12px}nav .menu .subList .submenu:not(:last-child),nav .menu .subList .subsub:not(:last-child){border-bottom:1px solid red}nav .menu .subList .submenu:nth-child(2){background-image:url(../../../img/right.png);background-position:134px 12px}nav .menu .subList .submenu,nav .menu .subList a{display:block}nav .menu .subsubList{display:none;position:absolute;left:145px;top:0;width:170px;background:#00004b;padding:0;z-index:5}nav .menu .subList .subsub{display:block;margin:auto 22px}nav .menu .lastList{display:none}.menu.open .subList{display:block}
/*# sourceMappingURL=data:application/json;base64, */
